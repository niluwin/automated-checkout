---
# Copyright Â© 2020 Intel Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause

version: "3.4"

# all common shared environment variables defined here:
x-common-env-variables: &common-variables
  EDGEX_SECURITY_SECRET_STORE: "false"
  Registry_Host: edgex-core-consul
  Clients_CoreData_Host: edgex-core-data
  Clients_Data_Host: edgex-core-data
  Clients_Notifications_Host: edgex-support-notifications
  Clients_Metadata_Host: edgex-core-metadata
  Clients_Command_Host: edgex-core-command
  Clients_Scheduler_Host: edgex-support-scheduler
  Clients_RulesEngine_Host: edgex-kuiper
  Clients_VirtualDevice_Host: edgex-device-virtual
  Databases_Primary_Host: edgex-redis
  Logging_EnableRemote: "false"

x-logging: &logging
  logging:
    options: { max-file: "5", max-size: 100m }

volumes:
  db-data:
  log-data:
  consul-config:
  consul-data:

services:
  consul:
    image: edgexfoundry/docker-edgex-consul:1.2.0
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    volumes:
      - consul-config:/consul/config:z
      - consul-data:/consul/data:z
    restart: always
    ports:
      - "0.0.0.0:8400:8400"
      - "0.0.0.0:8500:8500"
    environment:
      - EDGEX_DB=redis
      - EDGEX_SECURE=false
    networks:
      - default

  redis:
    image: redis:5.0.8-alpine
    ports:
      - "0.0.0.0:6379:6379"
    container_name: edgex-redis
    hostname: edgex-redis
    environment:
      <<: *common-variables
    volumes:
      - db-data:/data:z
    networks:
      - default

  notifications:
    image: edgexfoundry/docker-support-notifications-go:1.2.0
    container_name: edgex-support-notifications
    hostname: edgex-support-notifications
    environment:
      <<: *common-variables
      Service_Host: edgex-support-notifications
      Smtp_Username: "your-email@site.com"
      Smtp_Password: "SomePassword00000!"
      Smtp_Sender: "your-email@site.com"
      Smtp_Subject: "Automated Checkout Maintenance Alert"
    depends_on:
      - consul
      - redis
    restart: always
    ports:
      - "0.0.0.0:48060:48060"
    networks:
      - default

  metadata:
    image: edgexfoundry/docker-core-metadata-go:1.2.0
    container_name: edgex-core-metadata
    hostname: edgex-core-metadata
    environment:
      <<: *common-variables
      Service_Host: edgex-core-metadata
      Notifications_Sender: edgex-core-metadata
    depends_on:
      - consul
      - redis
      - notifications
    restart: always
    ports:
      - "0.0.0.0:48081:48081"
    networks:
      - default

  data:
    image: edgexfoundry/docker-core-data-go:1.2.0
    container_name: edgex-core-data
    hostname: edgex-core-data
    environment:
      <<: *common-variables
      Service_Host: edgex-core-data
    depends_on:
      - consul
      - redis
      - metadata
    restart: always
    ports:
      - "0.0.0.0:48080:48080"
      - "0.0.0.0:5563:5563"
    networks:
      - default

  command:
    image: edgexfoundry/docker-core-command-go:1.2.0
    container_name: edgex-core-command
    hostname: edgex-core-command
    environment:
      <<: *common-variables
      Service_Host: edgex-core-command
    depends_on:
      - consul
      - redis
      - metadata
    restart: always
    ports:
      - "0.0.0.0:48082:48082"
    networks:
      - default

  #################################################################
  # Automated Checkout Microservices
  #################################################################

  device-mqtt:
    image: niluwin/docker-device-mqtt-go:1.2.0
    container_name: edgex-device-mqtt
    hostname: edgex-device-mqtt
    environment:
      <<: *common-variables
      Service_Host: edgex-device-mqtt
      Service_Port: 48100
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48100:48100"
    networks:
      - default

  ds-card-reader:
    image: "niluwin/ds-card-reader:dev"
    container_name: automated-checkout_ds-card-reader
    environment:
      <<: *common-variables
      Service_Host: ds-card-reader
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48098:48098"
    networks:
      - default

  ds-controller-board:
    image: "niluwin/ds-controller-board:dev"
    container_name: automated-checkout_ds-controller-board
    environment:
      <<: *common-variables
      Service_Host: ds-controller-board
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48097:48097"
    networks:
      - default

  ds-cv-inference:
    image: niluwin/ds-cv-inference:dev
    container_name: automated-checkout_ds-cv-inference
    ipc: none
    command: ["/go/src/ds-cv-inference/images","mqtt-broker:1883","0.85","/go/src/ds-cv-inference/skumapping.json"]
    depends_on:
      - mqtt-broker
    ports:
      - "0.0.0.0:9005:9005"
    networks:
      - default

  as-controller-board-status:
    image: "niluwin/as-controller-board-status:dev"
    container_name: automated-checkout_as-controller-board-status
    environment:
      <<: *common-variables
      Service_Host: as-controller-board-status
      MessageBus_SubscribeHost_Host: edgex-core-data
      ApplicationSettings_MQTTEndpoint: "http://edgex-core-command:48082/api/v1/device/name/Inference-MQTT-device/command/inferenceDoorStatus"
      ApplicationSettings_NotificationHost: "http://edgex-support-notifications:48060/api/v1/notification"
      ApplicationSettings_SubscriptionHost: "http://edgex-support-notifications:48060/api/v1/subscription"
      ApplicationSettings_VendingEndpoint: "http://as-vending:48099/boardStatus"
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48094:48094"
    networks:
      - default

  as-vending:
    image: "niluwin/as-vending:dev"
    container_name: automated-checkout_as-vending
    environment:
      <<: *common-variables
      Service_Host: as-vending
      MessageBus_SubscribeHost_Host: edgex-core-data
      ApplicationSettings_AuthenticationEndpoint: http://ms-authentication:48096/authentication
      ApplicationSettings_DeviceControllerBoarddisplayReset: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/displayReset
      ApplicationSettings_DeviceControllerBoarddisplayRow0: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/displayRow0
      ApplicationSettings_DeviceControllerBoarddisplayRow1: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/displayRow1
      ApplicationSettings_DeviceControllerBoarddisplayRow2: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/displayRow2
      ApplicationSettings_DeviceControllerBoarddisplayRow3: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/displayRow3
      ApplicationSettings_DeviceControllerBoardLock1: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/lock1
      ApplicationSettings_DeviceControllerBoardLock2: http://edgex-core-command:48082/api/v1/device/name/ds-controller-board/command/lock2
      ApplicationSettings_InferenceDoorStatus: http://edgex-core-command:48082/api/v1/device/name/Inference-MQTT-device/command/inferenceDoorStatus
      ApplicationSettings_InferenceHeartbeat: http://edgex-core-command:48082/api/v1/device/name/Inference-MQTT-device/command/inferenceHeartbeat
      ApplicationSettings_InventoryAuditLogService: http://ms-inventory:48095/auditlog
      ApplicationSettings_InventoryService: http://ms-inventory:48095/inventory/delta
      ApplicationSettings_LedgerService: http://ms-ledger:48093/ledger
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48099:48099"
    networks:
      - default

  mqtt-broker:
    image: niluwin/eclipse-mosquitto:1.6.3
    container_name: mqtt-broker
    <<: *logging
    depends_on:
      - data
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:1883:1883"
      - "0.0.0.0:9001:9001"
    networks:
      - default

  ms-authentication:
    image: "niluwin/ms-authentication:dev"
    container_name: automated-checkout_ms-authentication
    environment:
      <<: *common-variables
      Service_Host: ms-authentication
      MessageBus_SubscribeHost_Host: edgex-core-data
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48096:48096"
    networks:
      - default

  ms-inventory:
    image: "niluwin/ms-inventory:dev"
    container_name: automated-checkout_ms-inventory
    ipc: none
    depends_on:
      - data
      - command
    environment:
      <<: *common-variables
      Service_Host: ms-inventory
      MessageBus_SubscribeHost_Host: edgex-core-data
    <<: *logging
    restart: always
    ports:
      - "0.0.0.0:48095:48095"
    networks:
      - default

  ms-ledger:
    image: "niluwin/ms-ledger:dev"
    container_name: automated-checkout_ms-ledger
    environment:
      <<: *common-variables
      Service_Host: ms-ledger
      MessageBus_SubscribeHost_Host: edgex-core-data
      ApplicationSettings_InventoryEndpoint: http://ms-inventory:48095/inventory
    <<: *logging
    depends_on:
      - data
      - command
    restart: always
    ipc: none
    ports:
      - "0.0.0.0:48093:48093"
    networks:
      - default

networks:
  default:
